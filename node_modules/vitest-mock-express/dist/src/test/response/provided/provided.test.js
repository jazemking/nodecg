// Types
import { describe, test, expect } from 'vitest';
// Tested Module
import getMockRes from '../../../response/response.js';
describe('response - Provided (accepts arguments and returns expected values)', () => {
    test('allows custom properties', () => {
        const mockUser = {
            id: '123',
            name: 'Bob',
        };
        // default value is not provided, but is typed
        const { res: defaultRes } = getMockRes();
        expect(defaultRes.user).toBeUndefined();
        // allows setting a custom property
        const { res } = getMockRes({ sendDate: true, user: mockUser });
        // both properties are available
        expect(res.sendDate).toBe(true);
        expect(res.user).toBe(mockUser);
    });
    test('allows locals to be typed', () => {
        const { res } = getMockRes({
            locals: {
                sessionId: 'abcdef',
                isPremiumUser: false,
            },
        });
        expect(res.locals).toBeDefined();
        expect(res.locals.sessionId).toBe('abcdef');
        expect(res.locals.isPremiumUser).toBe(false);
    });
});
//# sourceMappingURL=provided.test.js.map