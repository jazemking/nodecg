{
  "version": 3,
  "sources": ["../src/client/instance/client_registration.ts"],
  "sourcesContent": ["(function () {\n\t\"use strict\";\n\n\tconst { nodecg } = globalThis;\n\tconst timestamp = Date.now();\n\tlet { pathname } = globalThis.location;\n\n\t// If the pathname ends with /bundleName/ then we must be on index.html.\n\tif (pathname.endsWith(`/${nodecg.bundleName}/graphics/`)) {\n\t\tpathname += \"index.html\";\n\t}\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on(\"graphic:kill\", (instance) => {\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (instance.socketId === globalThis.socket.id) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.href = \"/instance/killed.html?pathname=\" + pathname;\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on(\"graphic:refresh\", (instance) => {\n\t\tif (!instance) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (instance.socketId === globalThis.socket.id) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on(\"graphic:refreshAll\", (graphic) => {\n\t\tif (!graphic) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (graphic.url === pathname) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t/* istanbul ignore next: cant cover navigates page */\n\tglobalThis.socket.on(\"graphic:bundleRefresh\", (bundleName) => {\n\t\tif (!bundleName) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (bundleName === nodecg.bundleName) {\n\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\tglobalThis.location.reload();\n\t\t}\n\t});\n\n\t// On page load, register this socket with its URL pathname, so that the server can keep track of it.\n\t// In single-instance graphics, this registration will be rejected if the graphic is already open elsewhere.\n\tregister();\n\t/* istanbul ignore next: hard to test reconnection stuff right now */\n\tglobalThis.socket.io.on(\"reconnect\", () => {\n\t\tregister();\n\t});\n\n\tfunction register(): void {\n\t\tglobalThis.socket.emit(\n\t\t\t\"graphic:registerSocket\",\n\t\t\t{\n\t\t\t\ttimestamp,\n\t\t\t\tpathName: pathname,\n\t\t\t\tbundleName: nodecg.bundleName,\n\t\t\t\tbundleVersion: nodecg.bundleVersion,\n\t\t\t\tbundleGit: nodecg.bundleGit,\n\t\t\t},\n\t\t\t(_error, accepted) => {\n\t\t\t\t/* istanbul ignore if: cant cover navigates page */\n\t\t\t\tif (accepted) {\n\t\t\t\t\t// This event and window boolean are ONLY used for tests.\n\t\t\t\t\t// Kinda gross, sorry.\n\t\t\t\t\twindow.dispatchEvent(new CustomEvent(\"nodecg-registration-accepted\"));\n\t\t\t\t\t(window as any).__nodecgRegistrationAccepted__ = true;\n\t\t\t\t} else {\n\t\t\t\t\t/* istanbul ignore next: cant cover navigates page */\n\t\t\t\t\tglobalThis.location.href = \"/instance/busy.html?pathname=\" + pathname;\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n})();\n"],
  "mappings": "oBAAC,UAAY,CACZ,aAEA,GAAM,CAAE,OAAAA,CAAO,EAAI,WACbC,EAAY,KAAK,IAAI,EACvB,CAAE,SAAAC,CAAS,EAAI,WAAW,SAG1BA,EAAS,SAAS,IAAIF,EAAO,UAAU,YAAY,IACtDE,GAAY,cAIb,WAAW,OAAO,GAAG,eAAiBC,GAAa,CAC7CA,GAIDA,EAAS,WAAa,WAAW,OAAO,KAE3C,WAAW,SAAS,KAAO,kCAAoCD,EAEjE,CAAC,EAGD,WAAW,OAAO,GAAG,kBAAoBC,GAAa,CAChDA,GAIDA,EAAS,WAAa,WAAW,OAAO,IAE3C,WAAW,SAAS,OAAO,CAE7B,CAAC,EAGD,WAAW,OAAO,GAAG,qBAAuBC,GAAY,CAClDA,GAIDA,EAAQ,MAAQF,GAEnB,WAAW,SAAS,OAAO,CAE7B,CAAC,EAGD,WAAW,OAAO,GAAG,wBAA0BG,GAAe,CACxDA,GAIDA,IAAeL,EAAO,YAEzB,WAAW,SAAS,OAAO,CAE7B,CAAC,EAIDM,EAAS,EAET,WAAW,OAAO,GAAG,GAAG,YAAa,IAAM,CAC1CA,EAAS,CACV,CAAC,EAED,SAASA,GAAiB,CACzB,WAAW,OAAO,KACjB,yBACA,CACC,UAAAL,EACA,SAAUC,EACV,WAAYF,EAAO,WACnB,cAAeA,EAAO,cACtB,UAAWA,EAAO,SACnB,EACA,CAACO,EAAQC,IAAa,CAEjBA,GAGH,OAAO,cAAc,IAAI,YAAY,8BAA8B,CAAC,EACnE,OAAe,+BAAiC,IAGjD,WAAW,SAAS,KAAO,gCAAkCN,CAE/D,CACD,CACD,CACD,GAAG",
  "names": ["nodecg", "timestamp", "pathname", "instance", "graphic", "bundleName", "register", "_error", "accepted"]
}
